[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ian\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ian\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 65.8594ms
[debug]       Load.loadUnit: defsScala took 0.3409ms
[debug] [Loading] Scanning directory C:\Users\Ian\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ian\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.7947 ms
[debug]           Load.resolveProject(global-plugins) took 40.8175ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ian\.sbt\1.0\plugins, plugins: List(<none>))) took 72.269ms
[debug] [Loading] Done in C:\Users\Ian\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.1467ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1914ms
[debug]     Load.loadUnit(file:/C:/Users/Ian/.sbt/1.0/plugins/, ...) took 165.404ms
[debug]   Load.apply: load took 322.1878ms
[debug]   Load.apply: resolveProjects took 4.5351ms
[debug]   Load.apply: finalTransforms took 50.2387ms
[debug]   Load.apply: config.delegates took 5.8234ms
[debug]   Load.apply: Def.make(settings)... took 281.8174ms
[debug]   Load.apply: structureIndex took 78.2875ms
[debug]   Load.apply: mkStreams took 1.0675ms
[info] loading global plugins from C:\Users\Ian\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3673.3832ms
[debug]           Load.loadUnit: plugins took 20.8488ms
[debug]           Load.loadUnit: defsScala took 0.0046ms
[debug] [Loading] Scanning directory C:\Users\Ian\IdeaProjects\budgeted_pc_tsp\project
[debug]             Load.loadUnit: mkEval took 4.2701ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ian\IdeaProjects\budgeted_pc_tsp\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0269 ms
[info] loading settings for project budgeted_pc_tsp-build from idea.sbt ...
[debug]               Load.resolveProject(budgeted_pc_tsp-build) took 1.9289ms
[debug]             Load.loadTransitive: finalizeProject(Project(id budgeted_pc_tsp-build, base: C:\Users\Ian\IdeaProjects\budgeted_pc_tsp\project, plugins: List(<none>))) took 3.2813ms
[debug] [Loading] Done in C:\Users\Ian\IdeaProjects\budgeted_pc_tsp\project, returning: (budgeted_pc_tsp-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1663.4359ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6039ms
[debug]         Load.loadUnit(file:/C:/Users/Ian/IdeaProjects/budgeted_pc_tsp/project/, ...) took 1689.7364ms
[debug]       Load.apply: load took 1691.1487ms
[debug]       Load.apply: resolveProjects took 0.1063ms
[debug]       Load.apply: finalTransforms took 9.09ms
[debug]       Load.apply: config.delegates took 0.3283ms
[debug]       Load.apply: Def.make(settings)... took 61.5165ms
[debug]       Load.apply: structureIndex took 25.2795ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\Ian\IdeaProjects\budgeted_pc_tsp\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3256.5715ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\Ian\IdeaProjects\budgeted_pc_tsp
[debug]       Load.loadUnit: mkEval took 0.2038ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3815 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 17.462ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Ian\IdeaProjects\budgeted_pc_tsp, plugins: List(<none>))) took 20.2069ms
[debug] [Loading] Done in C:\Users\Ian\IdeaProjects\budgeted_pc_tsp, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1100.3199ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.8897ms
[debug]   Load.loadUnit(file:/C:/Users/Ian/IdeaProjects/budgeted_pc_tsp/, ...) took 4375.4893ms
[debug] Load.apply: load took 4376.8595ms
[debug] Load.apply: resolveProjects took 0.1348ms
[debug] Load.apply: finalTransforms took 16.8676ms
[debug] Load.apply: config.delegates took 0.2554ms
[debug] Load.apply: Def.make(settings)... took 59.6002ms
[debug] Load.apply: structureIndex took 22.8703ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to budgeted_pc_tsp (in build file:/C:/Users/Ian/IdeaProjects/budgeted_pc_tsp/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55997 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55997, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to budgeted_pc_tsp (in build file:/C:/Users/Ian/IdeaProjects/budgeted_pc_tsp/)
[debug] > Exec(idea-shell, None, None)
